'use client';
import { useEffect } from 'react';
const __LEGACY_HTML = "<div id=\"teacherListeningView\" class=\"view\">\n    <div class=\"student-header-top\">\n      <div class=\"left\"><strong>Teacher Mode — Listening Editor</strong></div>\n      <div class=\"right\"><button class=\"btn\" id=\"homeBtnTeacherListening\">Home</button></div>\n    </div>\n    <div class=\"card\">\n      <h3>Listening Editor (JSON)</h3>\n      <p class=\"muted\" style=\"margin-top:-6px;\">Array of questions. e.g. <code>[{ \"number\":1, \"type\":\"basic|multi|replay\", \"prompt\":\"...\", \"choices\":[\"A\",\"B\",\"C\",\"D\"], \"correct\":[1], \"audio\":\"(optional url)\" }]</code></p>\n      <textarea id=\"listeningEditor\" placeholder=\"Example:\\n[\\n  {&quot;number&quot;:1,&quot;type&quot;:&quot;basic&quot;,&quot;prompt&quot;:&quot;What is the topic?&quot;,&quot;choices&quot;:[&quot;A&quot;,&quot;B&quot;,&quot;C&quot;,&quot;D&quot;],&quot;correct&quot;:[2]}\\n]\"></textarea>\n      <div style=\"margin-top:8px; display:flex; gap:8px; flex-wrap:wrap;\">\n        <button class=\"btn\" id=\"btnListeningLoadToStudent\">Load to Student&lt;\\/button&gt;\n        </button><button class=\"btn\" id=\"btnListeningLoadToStudy\">Load to Study Mode&lt;\\/button&gt;\n      </button></div>\n    </div>\n  </div>";
const __LEGACY_SCRIPT = "(function(){const $=id=>document.getElementById(id);\n/* BOOTSTRAP: TPO select + Start/Teacher/Home routing */\n(function(){\n  const $=id=>document.getElementById(id);\n  function showViewBootstrap(id){ document.querySelectorAll('.view').forEach(v=>v.style.display='none'); const el=$(id); if(el) el.style.display='block'; }\n  function setPillsBootstrap(tpo){ ['pillTpoR','pillTpoL','pillTpoS','pillTpoW','pillTpoReview'].forEach(pid=>{ const p=$(pid); if(p) p.textContent=tpo; }); }\n  const sel=$('tpoSelect'); if(sel && !sel.options.length){ for(let i=1;i<=60;i++){ const o=document.createElement('option'); o.value='TPO '+i; o.textContent='TPO '+i; sel.appendChild(o);} sel.value='TPO 1'; }\n  const btnStart=document.getElementById('btnStart'); if(btnStart){ btnStart.onclick=function(e){ const section=document.querySelector('input[name=\"section\"]:checked')?.value; const mode=document.querySelector('input[name=\"mode\"]:checked')?.value; const tpo=sel? sel.value : 'TPO'; setPillsBootstrap(tpo); if(!(section==='reading' && mode==='study' && document.getElementById('rsm'))){ if(section==='reading') showViewBootstrap('studentReadingView'); else if(section==='listening') showViewBootstrap('studentListeningView'); else if(section==='speaking') showViewBootstrap('studentSpeakingView'); else if(section==='writing') showViewBootstrap('studentWritingView'); } }; }\n  const btnTeacher=document.getElementById('btnGoTeacher'); if(btnTeacher){ btnTeacher.onclick=function(){ const section=document.querySelector('input[name=\"section\"]:checked')?.value; if(section==='reading') showViewBootstrap('teacherReadingView'); else if(section==='listening') showViewBootstrap('teacherListeningView'); else alert('Teacher editor는 현재 Reading/Listening만 제공됩니다.'); }; }\n  ['homeBtnReading','homeBtnListening','homeBtnSpeaking','homeBtnWriting','homeBtnTeacherListening','homeBtnTeacherReading','homeBtnReview'].forEach(id=>{ const el=document.getElementById(id); if(el) el.onclick=()=>showViewBootstrap('homeView'); });\n})();\n// --- renderRSentPrev\n})();\n\n\n\n(function(){\n  const $=(s,r=document)=>r.querySelector(s), $$=(s,r=document)=>Array.from(r.querySelectorAll(s));\n  // ===== Home prefs (TPO/Section/Mode) auto save/restore =====\n  function homeFillTPO(){ const sel=document.getElementById('tpoSelect'); if(sel && sel.options.length===0){ for(let i=1;i<=60;i++){ const o=document.createElement('option'); o.value='TPO '+i; o.textContent='TPO '+i; sel.appendChild(o);} sel.value='TPO 1'; } }\n  function homeLoad(){ try{ const p=JSON.parse(localStorage.getItem('home_prefs')||'{}'); if(p.tpo){ const sel=document.getElementById('tpoSelect'); if(sel){ homeFillTPO(); sel.value=p.tpo; } } if(p.section){ const r=document.querySelector(`input[name=\"section\"][value=\"${p.section}\"]`); if(r) r.checked=true; } if(p.mode){ const r=document.querySelector(`input[name=\"mode\"][value=\"${p.mode}\"]`); if(r) r.checked=true; } }catch(e){} }\n  function homeSave(){ try{ const sel=document.getElementById('tpoSelect'); const tpo=sel? sel.value: null; const section=document.querySelector('input[name=\"section\"]:checked')?.value; const mode=document.querySelector('input[name=\"mode\"]:checked')?.value; localStorage.setItem('home_prefs', JSON.stringify({tpo,section,mode})); }catch(e){} }\n  homeFillTPO(); homeLoad();\n  document.getElementById('tpoSelect')?.addEventListener('change',homeSave);\n  $$('input[name=\"section\"]').forEach(el=>el.addEventListener('change',homeSave));\n  $$('input[name=\"mode\"]').forEach(el=>el.addEventListener('change',homeSave));\n  // ===== Intercept Start in capture for Study modes =====\n  document.getElementById('btnStart')?.addEventListener('click',function(e){\n    const section=document.querySelector('input[name=\"section\"]:checked')?.value;\n    const mode=document.querySelector('input[name=\"mode\"]:checked')?.value;\n    const tpo=document.getElementById('tpoSelect')?.value||'TPO';\n    if(mode==='study' && section==='reading'){\n      e.preventDefault(); e.stopImmediatePropagation();\n      launchRSM(tpo);\n    }else if(mode==='study' && section==='listening'){\n      e.preventDefault(); e.stopImmediatePropagation();\n      launchLSM(tpo);\n    }\n  }, true);\n\n  // ======== READING STUDY MODE (RSM) ========\n  const RSM={App:{tpo:'TPO 1'},Set:null,Questions:[],wrongOrder:[],retryPtr:0,currentRetryQ:null}; window._RSMRef=RSM;\n  function rsmShow(id){ const root=$('#rsm'); if(!root) return; root.style.display='block'; $$('#rsm .v').forEach(v=>v.style.display='none'); $(id,root).style.display='block'; window.scrollTo({top:0,behavior:'smooth'}); }\n  function rsmP(q){ const H=new Set(q.evidence_sent_idx||[]); return (RSM.Set?.sentences||[]).map((s,i)=>`<div class=\"ln ${H.has(i)?'hl':''}\">${i+1}. ${s}</div>`).join('')||'<div class=\"sm\">(No passage)</div>'; }\n  function rsmOk(q,p){ const c=(q.correct||[]).slice().sort().join(','), x=(p||[]).slice().sort().join(','); return c===x && x!==''; }\n  function launchRSM(tpo){ RSM.App.tpo=tpo; const data=window.RSM_DATA||DemoR; RSM.Set=data; RSM.Questions=(data.questions||[]); rsmShow('#RSM_hub'); }\n  $('#RSM_HHome')?.addEventListener('click',()=>{ $('#rsm').style.display='none'; $('#homeView').style.display='block'; });\n  $('#RSM_tileCorrect')?.addEventListener('click',()=>rsmList(true));\n  $('#RSM_tileWrong')?.addEventListener('click',()=>rsmList(false));\n  $('#RSM_tileTrans')?.addEventListener('click',()=>rsmTrans());\n  function rsmList(isC){ const box=isC?$('#RSM_CList'):$('#RSM_WList'); const view=isC?'#RSM_correct':'#RSM_wrong'; if(!box) return; box.innerHTML=''; const arr=[...(RSM.Questions||[])].sort((a,b)=>a.number-b.number); const saved=rsmLoadAns(); const filt=arr.filter(q=> (rsmOk(q, saved[q.number])===isC)); filt.forEach(q=>{ const d=document.createElement('div'); d.className='item'; d.innerHTML=`<div>${q.number}</div><div>${q.prompt}</div><div>${(q.skill||[]).join(', ')||q.type||'-'}</div>`; d.addEventListener('click',()=>{ if(isC) rsmShowDetail(q); else rsmRetry(q,filt); }); box.appendChild(d); }); rsmShow(view); }\n  function rsmShowDetail(q){ const m=$('#RSM_mod'),b=$('#RSM_PBody'); b.innerHTML=`<div class='r'><strong>Question ${q.number}</strong></div><div>${q.prompt}</div><div class='sm'>Type: ${(q.skill||[]).join(', ')||q.type||'-'}</div><hr><div>${q.explanation||''}</div><hr>`+rsmP(q); m.style.display='flex'; }\n  function rsmRetry(q,list){ RSM.wrongOrder=list.map(x=>x.number); RSM.retryPtr=RSM.wrongOrder.indexOf(q.number); RSM.currentRetryQ=q; $('#RSM_RTitle').textContent=`Retry — Q${q.number}`; $('#RSM_RPrompt').textContent=q.prompt; const box=$('#RSM_RChoices'); box.innerHTML=''; const multi=(q.type==='multi')||((q.correct||[]).length>1); (q.choices||[]).forEach((c,i)=>{ const L=document.createElement('label'); L.className='r choice'; L.innerHTML=`<input type=\"${multi?'checkbox':'radio'}\" name=\"rsm_r_${q.number}\" value=\"${i}\"> ${c}`; box.appendChild(L); }); $('#RSM_RFB').innerHTML=''; rsmShow('#RSM_retry'); }\n  $('#RSM_RBack')?.addEventListener('click',()=>rsmShow('#RSM_wrong'));\n  $('#RSM_RNext')?.addEventListener('click',()=>{ RSM.retryPtr=Math.min(RSM.wrongOrder.length-1,RSM.retryPtr+1); const n=(RSM.Questions||[]).find(x=>x.number===RSM.wrongOrder[RSM.retryPtr]); rsmRetry(n,(RSM.Questions||[]).filter(x=>RSM.wrongOrder.includes(x.number))); });\n  $('#RSM_RSubmit')?.addEventListener('click',()=>{ const q=RSM.currentRetryQ; const picks=$$('#RSM_RChoices input:checked').map(i=>parseInt(i.value,10)); const good=rsmOk(q,picks); const fb=$('#RSM_RFB'); const S=rsmLoadAns(); S[q.number]=picks; rsmSaveAns(S); if(good){ fb.innerHTML='<span class=\"ok\">Correct ✔</span>'+(q.explanation?`<div class=\"sm\">${q.explanation}</div>`:''); } else { fb.innerHTML='<span class=\"bad\">Wrong ✖</span>'+(q.explanation?`<div class=\"sm\">${q.explanation}</div>`:''); const m=$('#RSM_mod'),b=$('#RSM_PBody'); b.innerHTML=rsmP(q); m.style.display='flex'; } });\n  $('#RSM_RPassage')?.addEventListener('click',()=>{ const q=RSM.currentRetryQ; const m=$('#RSM_mod'),b=$('#RSM_PBody'); b.innerHTML=rsmP(q); m.style.display='flex'; });\n  $('#RSM_PClose')?.addEventListener('click',()=>$('#RSM_mod').style.display='none');\n  function rsmTrans(){ const tbody=$('#RSM_TBody'); if(!tbody) return; const saved=rsmLoadTrans(); tbody.innerHTML=''; (RSM.Set?.sentences||[]).forEach((s,i)=>{ const id=`rsm_tr_${i}`; const tr=document.createElement('tr'); tr.innerHTML=`<td>${i+1}</td><td>${s}</td><td><textarea id=\"${id}\" rows=\"2\" placeholder=\"번역을 작성하세요…\">${saved[id]||''}</textarea></td><td class='RSM_mcol' style='display:none'>${(RSM.Set?.model_translation||[])[i]||''}</td>`; tbody.appendChild(tr); tr.querySelector('textarea').addEventListener('input',()=>{ const m=rsmLoadTrans(); m[id]=tr.querySelector('textarea').value; rsmSaveTrans(m); }); }); rsmShow('#RSM_trans'); }\n  $('#RSM_TBack')?.addEventListener('click',()=>rsmShow('#RSM_hub'));\n  $('#RSM_THome')?.addEventListener('click',()=>{ $('#rsm').style.display='none'; $('#homeView').style.display='block'; });\n  // Added: Correct/Wrong views Back & Home\n  $('#RSM_CBack')?.addEventListener('click',()=>rsmShow('#RSM_hub'));\n  $('#RSM_CHome')?.addEventListener('click',()=>{ $('#rsm').style.display='none'; $('#homeView').style.display='block'; });\n  $('#RSM_WBack')?.addEventListener('click',()=>rsmShow('#RSM_hub'));\n  $('#RSM_WHome')?.addEventListener('click',()=>{ $('#rsm').style.display='none'; $('#homeView').style.display='block'; });\n  // Added: Correct/Wrong views Back & Home\n  $('#RSM_CBack')?.addEventListener('click',()=>rsmShow('#RSM_hub'));\n  $('#RSM_CHome')?.addEventListener('click',()=>{ $('#rsm').style.display='none'; $('#homeView').style.display='block'; });\n  $('#RSM_WBack')?.addEventListener('click',()=>rsmShow('#RSM_hub'));\n  $('#RSM_WHome')?.addEventListener('click',()=>{ $('#rsm').style.display='none'; $('#homeView').style.display='block'; });\n  // Added: Correct/Wrong views Back & Home\n  $('#RSM_CBack')?.addEventListener('click',()=>rsmShow('#RSM_hub'));\n  $('#RSM_CHome')?.addEventListener('click',()=>{ $('#rsm').style.display='none'; $('#homeView').style.display='block'; });\n  $('#RSM_WBack')?.addEventListener('click',()=>rsmShow('#RSM_hub'));\n  $('#RSM_WHome')?.addEventListener('click',()=>{ $('#rsm').style.display='none'; $('#homeView').style.display='block'; });\n  // Added: Correct/Wrong views Back & Home\n  $('#RSM_CBack')?.addEventListener('click',()=>rsmShow('#RSM_hub'));\n  $('#RSM_CHome')?.addEventListener('click',()=>{ $('#rsm').style.display='none'; $('#homeView').style.display='block'; });\n  $('#RSM_WBack')?.addEventListener('click',()=>rsmShow('#RSM_hub'));\n  $('#RSM_WHome')?.addEventListener('click',()=>{ $('#rsm').style.display='none'; $('#homeView').style.display='block'; });\n  $('#RSM_showModel')?.addEventListener('change',e=>{$$('#rsm .RSM_mcol').forEach(td=>td.style.display=e.target.checked?'':'none')});\n  function rsmLoadAns(){ try{return JSON.parse(localStorage.getItem('reading_'+(RSM.Set?.set_id||'demo')))||{};}catch(e){return{}} }\n  function rsmSaveAns(m){ localStorage.setItem('reading_'+(RSM.Set?.set_id||'demo'),JSON.stringify(m||{})); }\n  function rsmLoadTrans(){ try{return JSON.parse(localStorage.getItem('reading_trans_'+(RSM.Set?.set_id||'demo')))||{};}catch(e){return{}} }\n  function rsmSaveTrans(m){ localStorage.setItem('reading_trans_'+(RSM.Set?.set_id||'demo'),JSON.stringify(m||{})); }\n  const DemoR={ set_id:'rd_demo', sentences:['Many students rely on library printers for their assignments.','Maintenance schedules sometimes disrupt availability.','The university offers access to a computer lab on the second floor.','A temporary pass can be issued at the front desk.'], model_translation:['많은 학생들이 과제 출력을 위해 도서관 프린터에 의존한다.','정기 점검 때문에 이용이 중단될 때가 있다.','학교는 2층 컴퓨터 실 사용을 제공한다.','안내 데스크에서 임시 출입증을 발급받을 수 있다.'], questions:[{number:1,type:'single',skill:['gist'],prompt:'What is the main point of the passage?',choices:['Library printers are always available','Maintenance can disrupt library printers','Students cannot print on campus'],correct:[1],explanation:'The passage states maintenance can disrupt availability.'},{number:2,type:'multi',skill:['detail'],prompt:'Which TWO alternatives are suggested for printing?',choices:['Use second-floor computer lab','Ask a friend to print','Get a temporary pass at the front desk','Buy a personal printer'],correct:[0,2],explanation:'The lab and a temporary pass are provided as solutions.',evidence_sent_idx:[2,3]}] };\n\n  // ======== LISTENING STUDY MODE (LSM) ========\n  const LSM={App:{tpo:'TPO 1'},Set:null,Questions:[],wrongOrder:[],retryPtr:0,currentRetryQ:null, rate:1}; window._LSMRef=LSM;\n  function lsmShow(id){ const root=$('#lsm'); if(!root) return; root.style.display='block'; $$('#lsm .v').forEach(v=>v.style.display='none'); $(id,root).style.display='block'; window.scrollTo({top:0,behavior:'smooth'}); }\n  function lsmP(q){ const H=new Set(q.evidence_sent_idx||[]); return (LSM.Set?.sentences||[]).map((s,i)=>`<div class=\"ln ${H.has(i)?'hl':''}\">${i+1}. ${s}</div>`).join('')||'<div class=\"sm\">(No script)</div>'; }\n  function lsmOk(q,p){ const c=(q.correct||[]).slice().sort().join(','), x=(p||[]).slice().sort().join(','); return c===x && x!==''; }\n  function launchLSM(tpo){ LSM.App.tpo=tpo; const data=window.LSM_DATA||DemoL; LSM.Set=data; LSM.Questions=(data.questions||[]); lsmBuildNote(); lsmShow('#LSM_hub'); }\n  // Hub\n  $('#LSM_HHome')?.addEventListener('click',()=>{ $('#lsm').style.display='none'; $('#homeView').style.display='block'; });\n  $('#LSM_tileNote')?.addEventListener('click',()=>{ lsmBuildNote(); lsmShow('#LSM_note'); });\n  $('#LSM_tileCorrect')?.addEventListener('click',()=>lsmList(true));\n  $('#LSM_tileWrong')?.addEventListener('click',()=>lsmList(false));\n  // Note-taking view\n  function lsmBuildNote(){ const sc=$('#LSM_script'); if(!sc) return; sc.innerHTML=(LSM.Set?.sentences||[]).map((s,i)=>`<div class='ln' data-idx='${i}'>${i+1}. ${s}</div>`).join(''); const mn=$('#LSM_modelBody'); if(mn) mn.innerHTML=(LSM.Set?.model_notes||[]).map((n,i)=>`<div class='sm'><strong>${i+1}.</strong> ${n}</div>`).join(''); const saved=localStorage.getItem('lsm_notes_'+(LSM.Set?.set_id||'demo'))||''; const ta=$('#LSM_studentNotes'); if(ta){ ta.value=saved; ta.oninput=()=>localStorage.setItem('lsm_notes_'+(LSM.Set?.set_id||'demo'),ta.value); }\n  }\n  $('#LSM_showModel')?.addEventListener('change',e=>{ $('#LSM_modelNotes').style.display=e.target.checked?'block':'none'; });\n  $('#LSM_NBack')?.addEventListener('click',()=>lsmShow('#LSM_hub'));\n  $('#LSM_NHome')?.addEventListener('click',()=>{ $('#lsm').style.display='none'; $('#homeView').style.display='block'; });\n  // Added: Correct/Wrong views Back & Home\n  $('#LSM_CBack')?.addEventListener('click',()=>lsmShow('#LSM_hub'));\n  $('#LSM_CHome')?.addEventListener('click',()=>{ $('#lsm').style.display='none'; $('#homeView').style.display='block'; });\n  $('#LSM_WBack')?.addEventListener('click',()=>lsmShow('#LSM_hub'));\n  $('#LSM_WHome')?.addEventListener('click',()=>{ $('#lsm').style.display='none'; $('#homeView').style.display='block'; });\n  // Added: Correct/Wrong views Back & Home\n  $('#LSM_CBack')?.addEventListener('click',()=>lsmShow('#LSM_hub'));\n  $('#LSM_CHome')?.addEventListener('click',()=>{ $('#lsm').style.display='none'; $('#homeView').style.display='block'; });\n  $('#LSM_WBack')?.addEventListener('click',()=>lsmShow('#LSM_hub'));\n  $('#LSM_WHome')?.addEventListener('click',()=>{ $('#lsm').style.display='none'; $('#homeView').style.display='block'; });\n  // Added: Correct/Wrong views Back & Home\n  $('#LSM_CBack')?.addEventListener('click',()=>lsmShow('#LSM_hub'));\n  $('#LSM_CHome')?.addEventListener('click',()=>{ $('#lsm').style.display='none'; $('#homeView').style.display='block'; });\n  $('#LSM_WBack')?.addEventListener('click',()=>lsmShow('#LSM_hub'));\n  $('#LSM_WHome')?.addEventListener('click',()=>{ $('#lsm').style.display='none'; $('#homeView').style.display='block'; });\n  // Added: Correct/Wrong views Back & Home\n  $('#LSM_CBack')?.addEventListener('click',()=>lsmShow('#LSM_hub'));\n  $('#LSM_CHome')?.addEventListener('click',()=>{ $('#lsm').style.display='none'; $('#homeView').style.display='block'; });\n  $('#LSM_WBack')?.addEventListener('click',()=>lsmShow('#LSM_hub'));\n  $('#LSM_WHome')?.addEventListener('click',()=>{ $('#lsm').style.display='none'; $('#homeView').style.display='block'; });\n  // Speed buttons simulate by toggling class; (오디오는 추후 연결)\n  function setRate(r){ LSM.rate=r; $$('#lsm .b').forEach(b=>b.classList.remove('p')); const map={0.5:'#LSM_sp05',0.8:'#LSM_sp08',1:'#LSM_sp10',1.2:'#LSM_sp12',2:'#LSM_sp20'}; $(map[r])?.classList.add('p'); }\n  $('#LSM_sp05')?.addEventListener('click',()=>setRate(0.5));\n  $('#LSM_sp08')?.addEventListener('click',()=>setRate(0.8));\n  $('#LSM_sp10')?.addEventListener('click',()=>setRate(1));\n  $('#LSM_sp12')?.addEventListener('click',()=>setRate(1.2));\n  $('#LSM_sp20')?.addEventListener('click',()=>setRate(2));\n  // Correct/Wrong list\n  function lsmList(isC){ const box=isC?$('#LSM_CList'):$('#LSM_WList'); const view=isC?'#LSM_correct':'#LSM_wrong'; if(!box) return; box.innerHTML=''; const arr=[...(LSM.Questions||[])].sort((a,b)=>a.number-b.number); const saved=lsmLoadAns(); const filt=arr.filter(q=> (lsmOk(q, saved[q.number])===isC)); filt.forEach(q=>{ const d=document.createElement('div'); d.className='item'; d.innerHTML=`<div>${q.number}</div><div>${q.prompt}</div><div>${q.type||'-'}</div>`; d.addEventListener('click',()=>{ if(isC) lsmDetail(q); else lsmRetry(q,filt); }); box.appendChild(d); }); lsmShow(view); }\n  function lsmDetail(q){ const m=$('#LSM_mod'),b=$('#LSM_PBody'); b.innerHTML=`<div class='r'><strong>Question ${q.number}</strong></div><div>${q.prompt}</div><hr>`+lsmP(q); m.style.display='flex'; }\n  function lsmRetry(q,list){ LSM.wrongOrder=list.map(x=>x.number); LSM.retryPtr=LSM.wrongOrder.indexOf(q.number); LSM.currentRetryQ=q; $('#LSM_RTitle').textContent=`Retry — Q${q.number}`; $('#LSM_RPrompt').textContent=q.prompt; const box=$('#LSM_RChoices'); box.innerHTML=''; const multi=(q.type==='multi')||((q.correct||[]).length>1); (q.choices||[]).forEach((c,i)=>{ const L=document.createElement('label'); L.className='r choice'; L.innerHTML=`<input type=\"${multi?'checkbox':'radio'}\" name=\"lsm_r_${q.number}\" value=\"${i}\"> ${c}`; box.appendChild(L); }); $('#LSM_RFB').innerHTML=''; lsmShow('#LSM_retry'); }\n  $('#LSM_RBack')?.addEventListener('click',()=>lsmShow('#LSM_wrong')); $('#LSM_RNext')?.addEventListener('click',()=>{ LSM.retryPtr=Math.min(LSM.wrongOrder.length-1,LSM.retryPtr+1); const n=(LSM.Questions||[]).find(x=>x.number===LSM.wrongOrder[LSM.retryPtr]); lsmRetry(n,(LSM.Questions||[]).filter(x=>LSM.wrongOrder.includes(x.number))); });\n  $('#LSM_RSubmit')?.addEventListener('click',()=>{ const q=LSM.currentRetryQ; const picks=$$('#LSM_RChoices input:checked').map(i=>parseInt(i.value,10)); const good=lsmOk(q,picks); const fb=$('#LSM_RFB'); const S=lsmLoadAns(); S[q.number]=picks; lsmSaveAns(S); if(good){ fb.innerHTML='<span class=\"ok\">Correct ✔</span>'+(q.explanation?`<div class=\"sm\">${q.explanation}</div>`:''); } else { fb.innerHTML='<span class=\"bad\">Wrong ✖</span>'+(q.explanation?`<div class=\"sm\">${q.explanation}</div>`:''); const m=$('#LSM_mod'),b=$('#LSM_PBody'); b.innerHTML=lsmP(q); m.style.display='flex'; } });\n  $('#LSM_REvidence')?.addEventListener('click',()=>{ const q=LSM.currentRetryQ; const idx=(q?.evidence_sent_idx||[])[0]; if(idx!=null){ const target=$(`#LSM_script .ln:nth-child(${idx+1})`); target?.scrollIntoView({behavior:'smooth',block:'center'}); target?.classList.add('hl'); setTimeout(()=>target?.classList.remove('hl'),1200); } });\n  $('#LSM_PClose')?.addEventListener('click',()=>$('#LSM_mod').style.display='none');\n  function lsmLoadAns(){ try{return JSON.parse(localStorage.getItem('listening_'+(LSM.Set?.set_id||'demo')))||{};}catch(e){return{}} }\n  function lsmSaveAns(m){ localStorage.setItem('listening_'+(LSM.Set?.set_id||'demo'),JSON.stringify(m||{})); }\n  const DemoL={ set_id:'ls_demo', sentences:['So, today we\\'re going to discuss migratory patterns.','A key factor is seasonal food availability.','Another factor is predation pressure, which varies by region.','Tracking data show unexpected detours in several species.'], model_notes:['Topic: migration patterns','Key: seasonal food availability','Factor: predation pressure by region','Data: detours in some species'], questions:[{number:1,type:'single',prompt:'What is the main topic of the talk?',choices:['Predation pressure','Migration patterns','Seasonal food'],correct:[1],explanation:'The lecture is about migratory patterns.'},{number:2,type:'multi',prompt:'Which TWO factors are mentioned as influencing migration?',choices:['Food availability','Weather forecasts','Predation pressure','Competition for mates'],correct:[0,2],evidence_sent_idx:[2]}] };\n})();\n\n\n\n// === Extra wiring: Teacher Listening load-to-study, Test→Study sync, Evidence audio playback ===\n(function(){\n  // Teacher Listening → Load to Study Mode (also here, for robustness)\n  const btnLStudy = document.getElementById('btnListeningLoadToStudy');\n  if(btnLStudy){ btnLStudy.addEventListener('click',()=>{\n    const ta=document.getElementById('listeningEditor');\n    try{ const raw=ta?.value || '[]'; const data=JSON.parse(raw);\n      const set = Array.isArray(data) ? { set_id:'ls_custom', sentences:[], model_notes:[], questions:data } : data;\n      window.LSM_DATA=set; alert('Loaded to Listening Study Mode. Go Home → Study+Listening → Start');\n    }catch(e){ alert('Invalid JSON for Listening set'); }\n  }); }\n\n  // Test → Study: public hook + Next-button fallb";
export default function Page(){
  useEffect(()=>{ try{ new Function(__LEGACY_SCRIPT)(); }catch(e){ console.error('[legacy-script]', e); } },[]);
  return <div dangerouslySetInnerHTML={{__html: __LEGACY_HTML}} />;
}